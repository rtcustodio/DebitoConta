unit SysDebitoConta.Conversor.Trailler;

interface

uses
  SysDebitoConta.Conversor.Interfaces,
  System.Generics.Collections,
  SysDebitoConta.RegistroDebitoConta;

type
  TConversorConteudoTraillerBancoDoBrasil = class(TInterfacedObject, IConversorConteudoTrailler)
  private
    FValorTotal : double;
    FQuantidadeRegistros : integer;
    procedure CalcularValorTotalDebitos(AValue : TObjectList<TRegistroDebito>);
    procedure CalcularQuantidadeRegistros(AValue : TObjectList<TRegistroDebito>);
  public
    constructor Create;
    destructor Destroy; override;
    class function New : IConversorConteudoTrailler;
    function SetListaRegistros(AValue : TObjectList<TRegistroDebito>) : IConversorConteudoTrailler;
    function GetLinhaCompleta : string;
  end;

implementation

{ TConversorConteudoTraillerBancoDoBrasil }

procedure TConversorConteudoTraillerBancoDoBrasil.CalcularQuantidadeRegistros(
  AValue: TObjectList<TRegistroDebito>);
begin
  FQuantidadeRegistros := AValue.Count;
end;

procedure TConversorConteudoTraillerBancoDoBrasil.CalcularValorTotalDebitos(
  AValue: TObjectList<TRegistroDebito>);
var
  I: Integer;
begin
  for I := 0 to Pred( AValue.Count ) do
  begin
    FValorTotal := FValorTotal + AValue[I].
  end;
end;

constructor TConversorConteudoTraillerBancoDoBrasil.Create;
begin

end;

destructor TConversorConteudoTraillerBancoDoBrasil.Destroy;
begin

  inherited;
end;

function TConversorConteudoTraillerBancoDoBrasil.GetLinhaCompleta: string;
begin

end;

class function TConversorConteudoTraillerBancoDoBrasil.New: IConversorConteudoTrailler;
begin
  Result := Self.Create;
end;

function TConversorConteudoTraillerBancoDoBrasil.SetListaRegistros(
  AValue: TObjectList<TRegistroDebito>): IConversorConteudoTrailler;
begin

end;

end.
